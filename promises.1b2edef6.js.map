{"mappings":"igBAIA,MAAMA,EAAUC,SAASC,cAAc,SACjCC,EAAYF,SAASG,iBAAiB,SA6C5C,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAO,C,SACXL,E,MACAC,GAEoBK,KAAKC,SAAW,GAEpCJ,EAAQE,GAERD,EAAOC,EAAA,GAGb,CAvDAR,EAAU,GAAGW,MAAQ,IACrBX,EAAU,GAAGW,MAAQ,IACrBX,EAAU,GAAGW,MAAQ,GAGrBC,EAAAC,OAAOC,KAAK,CACVC,SAAS,EACTZ,SAAU,eAGZN,EAAQmB,iBAAiB,UAEzB,SAAsBC,GACpB,IAAIC,EAAW,CAAC,EAChBD,EAAIE,iBAEJ,IAAK,IAAIC,KAASpB,EAChBkB,EAASE,EAAMC,MAAQC,OAAOF,EAAMT,OAEtC,MAAMP,MAAEA,EAAKmB,KAAEA,EAAIC,OAAEA,GAAWN,EAEhC,IAAK,IAAIO,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAGlCvB,EAFsBuB,EAAI,EACPF,EAAOE,EAAIrB,GAE3BsB,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBuB,WACEf,EAAAC,OAAOe,QACPxB,EACA,uBAAuBD,QAAeC,MAAS,IAGlDyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBuB,WACEf,EAAAC,OAAOiB,QACP1B,EACA,sBAAsBD,QAAeC,MAAS,GAGtD,CACF,G","sources":["src/js/promises.js"],"sourcesContent":["import 'notiflix/dist/notiflix-3.2.6.min.css';\nimport '../css/promises.css';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refForm = document.querySelector('.form');\nconst refImputs = document.querySelectorAll('input');\n\n//   default values  //\nrefImputs[0].value = 700;\nrefImputs[1].value = 300;\nrefImputs[2].value = 10;\n//   default values  //\n\nNotify.init({\n  useIcon: false,\n  position: 'center-top',\n});\n\nrefForm.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  let formData = {};\n  evt.preventDefault();\n\n  for (let imput of refImputs) {\n    formData[imput.name] = Number(imput.value);\n  }\n  const { delay, step, amount } = formData;\n\n  for (let i = 0; i < amount; i += 1) {\n    let promicePosition = i + 1;\n    let promiceDelay = step * i + delay;\n    createPromise(promicePosition, promiceDelay)\n      .then(({ position, delay }) => {\n        setTimeout(\n          Notify.success,\n          delay,\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(\n          Notify.failure,\n          delay,\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const data = {\n      position,\n      delay,\n    };\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve(data);\n    } else {\n      reject(data);\n    }\n  });\n}\n"],"names":["$95b1f5eb58d53a61$var$refForm","document","querySelector","$95b1f5eb58d53a61$var$refImputs","querySelectorAll","$95b1f5eb58d53a61$var$createPromise","position","delay","Promise","resolve","reject","data","Math","random","value","$h6c0i","Notify","init","useIcon","addEventListener","evt","formData","preventDefault","imput","name","Number","step","amount","i","then","setTimeout","success","catch","failure"],"version":3,"file":"promises.1b2edef6.js.map"}